SEEDS=[42]
N_POINTS = [6000]
#TO DO: add n_slices as parameter that section() takes in input [-1,0,1]

configfile: "config/config.yaml"

rule all:
    input:
        expand(["N_{N_points}_seed_{seed}_label.png","N_{N_points}_seed_{seed}_average+noise.png"], N_points=N_POINTS, seed=SEEDS)
    output:
        "END-OF-PIPELINE.txt"
    shell:
        "touch {output}"

rule crop_label:
    input:
        "N_{N_points}_seed_{seed}_label_uncropped.png"
    output:
        "N_{N_points}_seed_{seed}_label.png"
    script:
        "scripts/crop_label.py"

rule add_noise:
    input:
        "N_{N_points}_seed_{seed}_average.png",
        "N_{N_points}_seed_{seed}_noise.png"
    output:
        "N_{N_points}_seed_{seed}_average+noise.png"
    script:
        "scripts/add_noise.py"

rule make_average:
    input:
        expand("N_{{N_points}}_seed_{{seed}}_sl_{sl}.png", sl = config['SLICES'])
    output:
        temp("N_{N_points}_seed_{seed}_average.png")
    script:
        "scripts/make_average.py"

rule make_sections:
    output:
        expand("N_{{N_points}}_seed_{{seed}}_sl_{sl}.png", sl = config['SLICES'])
        temp("N_{N_points}_seed_{seed}_label_uncropped.png")
    benchmark:
        "benchmarks/N_{N_points}_seed_{seed}3_sections_benchmark.txt"
    script:
        "scripts/make_sections.py"

rule make_noise:
    output:
        temp("N_{N_points}_seed_{seed}_noise.png")
    script:
        "scripts/make_noise.py"
